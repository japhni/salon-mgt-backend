#spring.application.name=businessmanagement
#server.port=8080

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#spring.datasource.url=${DATASOURCE_URL}
#spring.datasource.username=${DATASOURCE_USER}
#spring.datasource.password=${DATASOURCE_PASSWORD}
#spring.datasource.driver-class-name=${DB_DRIVER}

spring.datasource.url=jdbc:postgresql://46.202.195.163:5432/salon_mgt
spring.datasource.username=postgres
spring.datasource.password=Japhni81!
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#debut de configuration pour base de donnees en ligne (neon)
#spring.datasource.url=jdbc:postgresql://ep-shrill-bush-a54ot60o.us-east-2.aws.neon.tech/salon-mgt-db
#spring.datasource.username=salon-mgt-db_owner
#spring.datasource.password=juE45VQgRNdU
#spring.datasource.driver-class-name=org.postgresql.Driver
#fin de configuration pour base de donnees en ligne (neon)


#debut de configuration pour base de donnees en ligne (supabase)
#spring.datasource.url=jdbc:postgresql://aws-0-eu-west-3.pooler.supabase.com:5432/postgres
#spring.datasource.username=postgres.pxviecyceujeakkdbvnm
#spring.datasource.password=P@ss?word-1?
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.hikari.pool-name=session
#fin de configuration pour base de donnees en ligne (supabase)

#spring.datasource.url=jdbc:mysql://auth-db1455.hstgr.io/index.php?db=u536531551_jf_db
#spring.datasource.username=u536531551_japhni81
#spring.datasource.password=S8ja5G/0a!D
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#password: P@ss?word-1?
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=${PROPERTIES_HIBERNATE_DIALECT}

spring.servlet.multipart.max-file-size=500KB
spring.servlet.multipart.max-request-size=500KB

# App Properties
#frontend.url=http://localhost:3000
#frontend.url=http://localhost:5173
frontend.url=https://salon-mgt.vercel.app
auth.token.expirationInMils=3600000
auth.token.jwtSecret=36763979244226452948404D635166546A576D5A7134743777217A25432A462D

#server.servlet.context-path=/api/v1







